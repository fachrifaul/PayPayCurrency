//
//  ExchangeRatesWorker.swift
//  PayPayCurrency
//
//  Created by Fachri Febrian on 15/08/2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class ExchangeRatesWorker {
    let cacheDataSource: LatestRateCacheDataSource
    let apiDataSource: LatestRateApiDataSource
    
    init(cacheDataSource: LatestRateCacheDataSource = LatestRateCacheDataSource(userDefaults: UserDefaults.standard),
         apiDataSource: LatestRateApiDataSource = LatestRateApiDataSource(service: Service.shared)) {
        self.cacheDataSource = cacheDataSource
        self.apiDataSource = apiDataSource
    }
    
    func fetchLatestConversionRate(completion: @escaping ([String: Double]) -> Void) {
        let rates = cacheDataSource.fetchLatestConversionRate()
        if !Service.isConnectedToNetwork() || LimitBandwith.shared.isCalledInLast30Min() {
            DispatchQueue.main.async {
                completion(rates)
            }
        } else {
            if (!rates.isEmpty) {
                apiDataSource.fetchLatestConversionRate { [weak self] rates in
                    if (!rates.isEmpty) {
                        self?.cacheDataSource.createLatestConversionRate(rates: rates)
                    }
                }
                DispatchQueue.main.async {
                    completion(rates)
                }
            } else {
                apiDataSource.fetchLatestConversionRate { [weak self] rates in
                    self?.cacheDataSource.createLatestConversionRate(rates: rates)
                    DispatchQueue.main.async {
                        completion(rates)
                    }
                }
            }
        }
    }
}
